// gallery.js
// –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Ö –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–æ—á–µ–∫

// –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ DOM –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase
window.addEventListener('DOMContentLoaded', async () => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Firestore –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
  if (!window.db) {
    document.getElementById('gallery-cards').innerHTML = '<div style="color:#ff5252;font-size:1.2em;text-align:center;margin:40px 0;">–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</div>';
    return;
  }

  const gallery = document.getElementById('gallery-cards');
  gallery.innerHTML = '<div style="color:#ffe000;font-size:1.2em;text-align:center;margin:40px 0;">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤...</div>';

  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const usersSnapshot = await window.db.collection('users').get();
    let projects = [];
    let allProjects = [];
    for (const userDoc of usersSnapshot.docs) {
      const userId = userDoc.id;
      const userData = userDoc.data();
      // –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫–Ω–µ–π–º –∫–∞–∫ –≤ profile.js: displayName –∏–ª–∏ email –¥–æ @, –∏–Ω–∞—á–µ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
      let nickname = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      if (userData.displayName) {
        nickname = userData.displayName;
      } else if (userData.email) {
        nickname = userData.email.split('@')[0];
      }
      // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const projectsSnapshot = await window.db.collection('users').doc(userId).collection('projects').orderBy('createdAt', 'desc').get();
      projectsSnapshot.forEach(projectDoc => {
        const p = projectDoc.data();
        projects.push({
          id: projectDoc.id,
          userId,
          nickname,
          ...p
        });
      });
    }
    allProjects = projects; // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞
    if (projects.length === 0) {
      gallery.innerHTML = '<div style="color:#ffe000;font-size:1.2em;text-align:center;margin:40px 0;">–ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞</div>';
      return;
    }
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
    projects.sort((a, b) => (b.createdAt || '').localeCompare(a.createdAt || ''));
    // –†–µ–Ω–¥–µ—Ä–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏
    renderGallery(projects);
    // --- –ü–æ–∏—Å–∫ ---
    const searchInput = document.getElementById('gallery-search');
    if (searchInput) {
      searchInput.addEventListener('input', function() {
        const q = this.value.trim().toLowerCase();
        if (!q) {
          renderGallery(allProjects);
          return;
        }
        const filtered = allProjects.filter(p =>
          (p.name && p.name.toLowerCase().includes(q)) ||
          (p.nickname && p.nickname.toLowerCase().includes(q))
        );
        renderGallery(filtered);
      });
    }
    // --- –ö–æ–Ω–µ—Ü –ø–æ–∏—Å–∫–∞ ---
  } catch (e) {
    gallery.innerHTML = '<div style="color:#ff5252;font-size:1.2em;text-align:center;margin:40px 0;">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤: ' + e.message + '</div>';
  }
});

// –†–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫
function renderGallery(projects) {
  const gallery = document.getElementById('gallery-cards');
  gallery.innerHTML = '';
  if (!projects.length) {
    gallery.innerHTML = '<div style="color:#ffe000;font-size:1.2em;text-align:center;margin:40px 0;">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>';
    return;
  }
  for (const p of projects) {
    const card = document.createElement('div');
    card.className = 'welcome-card';
    card.style.cursor = 'pointer';
    card.innerHTML = `
      <img src="${p.imgUrl || 'img/default-project.png'}" alt="img" style="width:160px;height:100px;border-radius:12px;object-fit:cover;border:2px solid #ffe000;background:#222;display:block;margin:0 auto 12px auto;">
      <div class="card-title" style="margin-bottom:6px;">
        <span style="font-weight:400;">–ù–∞–∑–≤–∞–Ω–∏–µ:</span> <span style="font-weight:700;">${p.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</span>
      </div>
      <div class="card-desc" style="margin-bottom:8px;">–ê–≤—Ç–æ—Ä: <b>${p.nickname || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</b></div>
      <div class="rating-block" style="display:flex;align-items:center;gap:16px;margin-bottom:10px;">
        <button class="overview-btn" style="background:#ffe000;color:#222;font-weight:700;padding:14px 36px;font-size:1.15em;border-radius:10px;border:none;cursor:pointer;box-shadow:0 2px 8px #ffe00033;">–û–±–∑–æ—Ä</button>
        <button class="like-btn" title="–õ–∞–π–∫" style="font-size:1.3em;padding:10px 18px;border-radius:10px;border:none;background:#ffe000;color:#222;cursor:pointer;">üëç</button>
        <span class="like-count">0</span>
        <button class="dislike-btn" title="–î–∏–∑–ª–∞–π–∫" style="font-size:1.3em;padding:10px 18px;border-radius:10px;border:none;background:#ffe000;color:#222;cursor:pointer;">üëé</button>
        <span class="dislike-count">0</span>
      </div>
      
    `;
    // --- –û—Ü–µ–Ω–∫–∏ ---
    const likeBtn = card.querySelector('.like-btn');
    const dislikeBtn = card.querySelector('.dislike-btn');
    const likeCount = card.querySelector('.like-count');
    const dislikeCount = card.querySelector('.dislike-count');
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
    async function updateRatingCounts() {
      const ratingsSnap = await window.db.collection('projects').doc(p.id).collection('ratings').get();
      let likes = 0, dislikes = 0;
      ratingsSnap.forEach(doc => {
        if (doc.data().value === 1) likes++;
        if (doc.data().value === -1) dislikes++;
      });
      likeCount.textContent = likes;
      dislikeCount.textContent = dislikes;
    }
    // –ü–æ–ª—É—á–∞–µ–º userId
    let userId = null;
    if (window.firebase && window.firebase.auth().currentUser) {
      userId = window.firebase.auth().currentUser.uid;
    }
    async function setRating(value) {
      if (!userId) {
        alert('–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –æ—Ü–µ–Ω–∫–∏!');
        return;
      }
      await window.db.collection('projects').doc(p.id).collection('ratings').doc(userId).set({ value });
      updateRatingCounts();
    }
    likeBtn.onclick = () => setRating(1);
    dislikeBtn.onclick = () => setRating(-1);
    updateRatingCounts();
    // --- –ö–æ–Ω–µ—Ü –æ—Ü–µ–Ω–æ–∫ ---
    card.querySelector('.overview-btn').onclick = (e) => {
      e.stopPropagation();
      openCodeModal(p);
    };
    gallery.appendChild(card);
  }
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∫–æ–¥–æ–º
function openCodeModal(project) {
  // –°–æ–∑–¥–∞—ë–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∫–æ–¥–∞
  let codeModal = document.createElement('div');
  codeModal.className = 'modal show';
  codeModal.style = 'z-index:9999;';
  codeModal.innerHTML = `
    <div class="modal-content draggable-modal" style="min-width:340px;max-width:640px;min-height:320px;position:absolute;left:10%;top:10%;">
      <div class="modal-header" style="cursor:move;padding:8px;background:#333;border-radius:18px 18px 0 0;margin:-36px -32px 20px -32px;text-align:center;color:#ffe000;font-weight:700;">
        –ö–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ - –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
      </div>
      <span class="close-modal" id="close-code-modal" style="position:absolute;top:12px;right:18px;font-size:1.6em;color:#ffe000;cursor:pointer;opacity:0.7;">√ó</span>
      <h2 style="text-align:center;margin-bottom:10px;">${project.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</h2>
      <div style="margin-bottom:8px;">HTML:</div>
      <pre style="background:#181818;color:#ffe000;border-radius:8px;padding:10px 8px;overflow-x:auto;max-height:120px;">${escapeHtml(project.html || '')}</pre>
      <div style="margin-bottom:8px;margin-top:10px;">CSS:</div>
      <pre style="background:#181818;color:#ffe000;border-radius:8px;padding:10px 8px;overflow-x:auto;max-height:120px;">${escapeHtml(project.css || '')}</pre>
    </div>
  `;
  document.body.appendChild(codeModal);

  // –°–æ–∑–¥–∞—ë–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ä–∞–∑—É
  let previewModal = document.createElement('div');
  previewModal.className = 'modal show';
  previewModal.style = 'z-index:10000;background:transparent;pointer-events:none;';
  previewModal.innerHTML = `
    <div class="modal-content draggable-modal" style="min-width:340px;max-width:640px;min-height:320px;position:absolute;left:60%;top:10%;pointer-events:auto;">
      <div class="modal-header" style="cursor:move;padding:8px;background:#333;border-radius:18px 18px 0 0;margin:-36px -32px 20px -32px;text-align:center;color:#ffe000;font-weight:700;">
        –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞ - –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
      </div>
      <span class="close-modal" id="close-preview-modal" style="position:absolute;top:12px;right:18px;font-size:1.6em;color:#ffe000;cursor:pointer;opacity:0.7;">√ó</span>
      <h2 style="text-align:center;margin-bottom:10px;">${project.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</h2>
      <div style="text-align:center;margin-bottom:10px;">–ê–≤—Ç–æ—Ä: <b>${project.nickname || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</b></div>
      <img src="${project.imgUrl || 'img/default-project.png'}" alt="img" style="width:90px;height:90px;border-radius:12px;margin:10px auto;object-fit:cover;border:2px solid #ffe000;background:#222;display:block;">
      <iframe style="width:99%;height:240px;border-radius:12px;border:2px solid #ffe000;background:#222;margin-top:10px;" srcdoc='<!DOCTYPE html><html lang="ru"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><style>body{background:#1a1a1a;color:#e0e0e0;font-family:Montserrat,Arial,sans-serif;margin:0;padding:0;}*{box-sizing:border-box;}</style><style>${project.css || ''}</style></head><body>${project.html || ''}</body></html>'></iframe>
    </div>
  `;
  document.body.appendChild(previewModal);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
  document.getElementById('close-code-modal').onclick = () => {
    codeModal.remove();
    previewModal.remove();
  };
  document.getElementById('close-preview-modal').onclick = () => {
    codeModal.remove();
    previewModal.remove();
  };
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ñ–æ–Ω –ª–µ–≤–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  codeModal.onclick = (e) => { 
    if (e.target === codeModal) { 
      codeModal.remove(); 
      previewModal.remove(); 
    } 
  };

  // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
  makeDraggable(codeModal.querySelector('.modal-content'));
  makeDraggable(previewModal.querySelector('.modal-content'));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º—ã—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function makeDraggable(element) {
  let isDragging = false;
  let currentX = 0;
  let currentY = 0;
  let initialX;
  let initialY;
  let xOffset = 0;
  let yOffset = 0;

  const header = element.querySelector('.modal-header');
  
  // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–∞
  const rect = element.getBoundingClientRect();
  currentX = rect.left;
  currentY = rect.top;
  xOffset = currentX;
  yOffset = currentY;
  
  header.addEventListener('mousedown', dragStart);
  document.addEventListener('mousemove', drag);
  document.addEventListener('mouseup', dragEnd);

  function dragStart(e) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –±—ã–ª –≤ –æ–±–ª–∞—Å—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏–ª–∏ –µ–≥–æ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    if (e.target === header || header.contains(e.target)) {
      e.preventDefault();
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é —ç–ª–µ–º–µ–Ω—Ç–∞
      const rect = element.getBoundingClientRect();
      initialX = e.clientX - rect.left;
      initialY = e.clientY - rect.top;
      
      isDragging = true;
      element.style.zIndex = '10001';
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
      header.style.background = '#555';
    }
  }

  function drag(e) {
    if (isDragging) {
      e.preventDefault();
      
      currentX = e.clientX - initialX;
      currentY = e.clientY - initialY;

      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —ç–∫—Ä–∞–Ω–∞
      const maxX = window.innerWidth - element.offsetWidth;
      const maxY = window.innerHeight - element.offsetHeight;
      
      currentX = Math.max(0, Math.min(currentX, maxX));
      currentY = Math.max(0, Math.min(currentY, maxY));

      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
      element.style.left = currentX + 'px';
      element.style.top = currentY + 'px';
      element.style.right = 'auto';
      element.style.transform = 'none';
    }
  }

  function dragEnd(e) {
    if (isDragging) {
      isDragging = false;
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Ü–≤–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞
      header.style.background = '#333';
    }
  }
}

// –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ (–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ —Ç–µ–ø–µ—Ä—å –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
function openPreviewModal(project) {
  let modal = document.createElement('div');
  modal.className = 'modal show';
  modal.style = 'z-index:9999;';
  modal.innerHTML = `
    <div class="modal-content" style="min-width:340px;max-width:640px;min-height:320px;">
      <span class="close-modal" id="close-preview-modal" style="position:absolute;top:12px;right:18px;font-size:1.6em;color:#ffe000;cursor:pointer;opacity:0.7;">√ó</span>
      <h2 style="text-align:center;margin-bottom:10px;">${project.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</h2>
      <div style="text-align:center;margin-bottom:10px;">–ê–≤—Ç–æ—Ä: <b>${project.nickname || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</b></div>
      <img src="${project.imgUrl || 'img/default-project.png'}" alt="img" style="width:90px;height:90px;border-radius:12px;margin:10px auto;object-fit:cover;border:2px solid #ffe000;background:#222;display:block;">
      <iframe style="width:99%;height:240px;border-radius:12px;border:2px solid #ffe000;background:#222;margin-top:10px;" srcdoc='<!DOCTYPE html><html lang="ru"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><style>body{background:#1a1a1a;color:#e0e0e0;font-family:Montserrat,Arial,sans-serif;margin:0;padding:0;}*{box-sizing:border-box;}</style><style>${project.css || ''}</style></head><body>${project.html || ''}</body></html>'></iframe>
    </div>
  `;
  document.body.appendChild(modal);
  document.getElementById('close-preview-modal').onclick = () => modal.remove();
  modal.onclick = (e) => { if (e.target === modal) modal.remove(); };
}

// –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ html –¥–ª—è <pre>
function escapeHtml(str) {
  return str.replace(/[&<>'\"]/g, function(tag) {
    const charsToReplace = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      "'": '&#39;',
      '"': '&quot;'
    };
    return charsToReplace[tag] || tag;
  });
} 